  1: /-- Should validly cover most, if not all keywords, structures, arrays, etc
  2:   2: 
  3:   3: CD19 d
  4:   4: 
  5:   5: constants
  6:   6: 	MAXINPUTSIZE = 20, test = 40.6
  7:   7: 
  8:   8: types
  9:   9: 	point is
 10:  10: 		xPos : real,
 11:  11: 		yPos : real
 12:  12: 	end
 13:  13: 	points is array [MAXINPUTSIZE] of point
 14:  14: 	pointer is 
 15:  15: 		lop : integer,
 16:  16: 		yes : boolean,
 17:  17: 		yop : real
 18:  18: 	end
 19:  19: 
 20:  20: arrays
 21:  21: 	inputPoints : points, outputPoints : points
 22:  22: 
 23:  23: function getInput(inputArray : points, test : integer) : integer
 24:  24: 	arraySize : integer, i  : integer
 25:  25: 	begin
 26:  26: 	printline "Enter number of points.";
 27:  27: 	input arraySize;
 28:  28: 	repeat()
 29:  29: 		printline "number of points must be less than 20 and greater than 2.";
 30:  30: 		input arraySize;
 31:  31: 	until(arraySize > MAXINPUTSIZE AND arraySize < 2);
 32:  32: 	for(i = arraySize; i > 0)
 33:  33: 		printline "input X";
 34:  34: 		input points[i].xPos;
 35:  35: 		printline "input Y";
 36:  36: 		input points[i].yPos;
 37:  37: 	end
 38:  38: 	return arraySize;
 39:  39: end
 40:  40: 
 41:  41: function getlinput(inputArray : points, test : integer, test : Test) : integer
 42:  42: 	arraySize : integer, i  : integer, HeIS : real
 43:  43: 	begin
 44:  44: 	
 45:  45: 	printline "Enter number of points.";
 46:  46: 	
 47:  47: 	print "I feel Your prescense amongst us";
 48:  48: 	
 49:  49: 	input arraySize;
 50:  50: 	
 51:  51: 	repeat()
 52:  52: 		printline "number of points must be less than 20 and greater than 2.";
 53:  53: 		input arraySize;
 54:  54: 	until(arraySize > MAXINPUTSIZE AND arraySize < 2);
 55:  55: 	
 56:  56: 	for(i = arraySize; i > 0)
 57:  57: 		printline "input X";
 58:  58: 		input points[i].xPos;
 59:  59: 		printline "input Y";
 60:  60: 		input points[i].yPos;
 61:  61: 	end
 62:  62: 	input canYourHearTheRumble;
 63:  63: 	return arraySize;
 64:  64: end
 65:  65: 
 66:  66: function calculateArea(inputArray : points, arraySize : integer) : real
 67:  67: 	area : real, count : int 
 68:  68: 	begin
 69:  69: 	for (i = 0; i < arraySize - 2)
 70:  70: 		area += (inputArray[i].xPos +inputArray[i+1].xPos) * (inputArray[i1].yPos - inputArray[i].yPos);
 71:  71: 	end
 72:  72: 	area *= 0.5;
 73:  73: 	return area;
 74:  74: end	
 75:  75: 
 76:  76: function Circe(inputArray : points, arraySize : integer) : real
 77:  77: 	area : real, count : int 
 78:  78: 	begin
 79:  79: 	
 80:  80: 	repeat(area = 7)
 81:  81: 		printline "number of points must be less than 20 and greater than 2.";
 82:  82: 		input arraySize;
 83:  83: 		area += 1;
 84:  84: 	until(arraySize > MAXINPUTSIZE AND arraySize > 2);
 85:  85: 	
 86:  86: 	area *= 0.5;
 87:  87: 	return area;
 88:  88: end	
 89:  89: 	
 90:  90: main
 91:  91: 	arraySize : integer, test : real
 92:  92: begin
 93:  93: 	if (true) 
 94:  94: 		arraySize = 7;
 95:  95: 	end
 96:  96: 	
 97:  97: 	if (false) 
 98:  98: 		arraySize = 9; 
 99:  99: 	else
100: 100: 		arraySize = 8;
101: 101: 	end
102: 102: 	
103: 103: end CD19 d
104: 104: 	
105: 105: 
106: 106: /-- late remark...just to test that

Parser has finished

Preorder Traversal:

NPROG  d      NGLOB  NILIST NINIT  MAXINPUTSIZE  NILIT  20     NINIT  
test   NFLIT  40.6   NILIST NRTYPE point  NFLIST NSDECL xPos   NSDECL 
yPos   NILIST NATYPE points NSIMV  MAXINPUTSIZE  NRTYPE pointer       
NFLIST NSDECL lop    NFLIST NSDECL yes    NSDECL yop    NALIST NARRD  
inputPoints   NARRD  outputPoints  NFUNCS        NFUND  getInput      
NPLIST NARRP  NARRD  inputArray    NSIMP  NSDECL test   NDLIST NSDECL 
arraySize     NSDECL i      NSTATS NPRLN  NSTRG  "Enter number of points."   
NSTATS NINPUT NSIMV  arraySize     NSTATS NREPT  NSTATS NPRLN  NSTRG  
"number of points must be less than 20 and greater than 2."    NINPUT 
NSIMV  arraySize     NBOOL  NAND   NGRT   NSIMV  arraySize     NSIMV  
MAXINPUTSIZE  NLSS   NSIMV  arraySize     NILIT  2      NSTATS NFOR   
NASGN  NSIMV  i      NSIMV  arraySize     NGRT   NSIMV  i      NILIT  
0      NSTATS NPRLN  NSTRG  "input X"     NSTATS NINPUT NARRV  points 
NSIMV  i      NSTATS NPRLN  NSTRG  "input Y"     NINPUT NARRV  points 
NSIMV  i      NRETN  NSIMV  arraySize     NFUNCS        NFUND  getlinput     
NPLIST NARRP  NARRD  inputArray    NPLIST NSIMP  NSDECL test   NARRP  
NARRD  test   NDLIST NSDECL arraySize     NDLIST NSDECL i      NSDECL 
HeIS   NSTATS NPRLN  NSTRG  "Enter number of points."   NSTATS NPRINT 
NSTRG  "I feel Your prescense amongst us" NSTATS NINPUT NSIMV  arraySize     
NSTATS NREPT  NSTATS NPRLN  NSTRG  "number of points must be less than 20 and greater than 2."    
NINPUT NSIMV  arraySize     NBOOL  NAND   NGRT   NSIMV  arraySize     
NSIMV  MAXINPUTSIZE  NLSS   NSIMV  arraySize     NILIT  2      NSTATS 
NFOR   NASGN  NSIMV  i      NSIMV  arraySize     NGRT   NSIMV  i      
NILIT  0      NSTATS NPRLN  NSTRG  "input X"     NSTATS NINPUT NARRV  
points NSIMV  i      NSTATS NPRLN  NSTRG  "input Y"     NINPUT NARRV  
points NSIMV  i      NSTATS NINPUT NSIMV  canYourHearTheRumble NRETN  
NSIMV  arraySize     NFUNCS        NFUND  calculateArea NPLIST NARRP  
NARRD  inputArray    NSIMP  NSDECL arraySize     NDLIST NSDECL area   
NARRD  count  NSTATS NFOR   NASGN  NSIMV  i      NILIT  0      NLSS   
NSIMV  i      NSUB   NSIMV  arraySize     NILIT  2      NPLEQ  NSIMV  
area   NMUL   NADD   NARRV  inputArray    NSIMV  i      NARRV  inputArray    
NADD   NSIMV  i      NILIT  1      NSUB   NARRV  inputArray    NSIMV  
i1     NARRV  inputArray    NSIMV  i      NSTATS NSTEQ  NSIMV  area   
NFLIT  0.5    NRETN  NSIMV  area   NFUNCS        NFUND  Circe  NPLIST 
NARRP  NARRD  inputArray    NSIMP  NSDECL arraySize     NDLIST NSDECL 
area   NARRD  count  NSTATS NREPT  NASGN  NSIMV  area   NILIT  7      
NSTATS NPRLN  NSTRG  "number of points must be less than 20 and greater than 2."    
NSTATS NINPUT NSIMV  arraySize     NPLEQ  NSIMV  area   NILIT  1      
NBOOL  NAND   NGRT   NSIMV  arraySize     NSIMV  MAXINPUTSIZE  NGRT   
NSIMV  arraySize     NILIT  2      NSTATS NSTEQ  NSIMV  area   NFLIT  
0.5    NRETN  NSIMV  area   NMAIN  NSDLST NSDECL arraySize     NSDECL 
test   NSTATS NIFTH  NTRUE  NASGN  NSIMV  arraySize     NILIT  7      
NIFTE  NFALS  NASGN  NSIMV  arraySize     NILIT  9      NASGN  NSIMV  
arraySize     NILIT  8      

